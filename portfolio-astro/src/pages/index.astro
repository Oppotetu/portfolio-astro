---
import Layout from '@/layouts/Layout.astro';
import type { FilePaths, ImageEntry } from '@/lib/types';
import type { Project } from '@/lib/types';
import { sanityClient } from 'sanity:client';
import imageOrder from '../lib/image-order.json';
import Gallery from '@/components/Gallery';

let projects: Project[] = await sanityClient.fetch(
  `*[_type == "project"]{
    'slug': slug.current, 
    title, 
    authors,
    summary,
    squareFootage,
    publishedYear,
    assignmentType
  }`
);

const imageModules: Record<string, string> = import.meta.glob(
  '../images/**/*.{jpg,jpeg,png,webp}',
  {
    eager: true,
    query: '?url',
    import: 'default',
  }
);

const imageEntries = Object.entries(imageModules);

let images: ImageEntry[] = [];
let carouselIndex = 0;

for (const {project, images: orderedNames} of imageOrder) {
  const startIndex = carouselIndex; 
  for (const baseName of orderedNames) {
    let imageVariants: FilePaths = {};

    for (const [path, modulePath] of imageEntries) {
      const projectDir = path.split('/images/')[1].split('/')[0];
      const fileBase = path.slice(
        path.lastIndexOf('/') + 1,
        path.lastIndexOf('-')
      );
      if (projectDir === project && fileBase === baseName) {
        const variant = path.slice(
          path.lastIndexOf('-') + 1,
          path.lastIndexOf('.')
        );
        imageVariants[variant] = modulePath;
      }
    }


    images.push({
      project,
      filename: baseName,
      filePaths: imageVariants,
      carouselIndex: carouselIndex++,
    });
  }

  const endIndex = carouselIndex - 1; 
  projects = projects.map((p) =>
    p.slug === project ? { ...p, slideIndexRange: [startIndex, endIndex]} : p
  )
}

---

<!-- {projects.sort((a, b) => a.slideIndexRange[0] - b.slideIndexRange[0]).map((p) => (
  <div>
    {p.slideIndexRange.join(', ')}
  </div>
))} -->

<Layout projects={projects}>
  <Gallery client:only="react" projects={projects} images={images} />
</Layout>
